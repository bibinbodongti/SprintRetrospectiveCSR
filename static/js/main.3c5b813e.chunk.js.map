{"version":3,"sources":["components/Header/Header.js","api/authAPI.js","components/LoginSignUp/Login.js","api/boardAPI.js","services/handleCookie.js","components/BoardCard/BoardCard.js","components/BoardCard/AddNewBoardCard.js","components/ManageListBoardCard/ManageListBoardCard.js","components/TaskTag/TaskTagView.js","components/TaskTag/TaskTagEdit.js","components/ColumnBoard/ColumnBoard.js","components/BoardTopBar/BoardTopBar.js","api/tagAPI.js","components/Board/Board.js","api/accountAPI.js","components/LoginSignUp/SignUp.js","components/Profile/Profile.js","components/Profile/ChangePass.js","App.js","index.js"],"names":["Header","isLogin","handleLogin","Navbar","bg","variant","Brand","href","Nav","className","Link","Form","inline","FormControl","type","placeholder","Button","Auth","inputUsername","inputPassword","Promise","resolve","reject","urlencoded","URLSearchParams","append","fetch","method","body","redirect","then","response","text","result","includes","document","cookie","JSON","parse","access_token","catch","error","console","log","Login","useState","setInputUsername","setInputPassword","noticeForm","setNoticeForm","setRedirect","useEffect","onLogin","a","length","ans","message","to","style","color","Group","controlId","Label","Control","onChange","e","target","value","Check","label","id","onClick","appId","autoLoad","callback","accessToken","userID","cssClass","icon","render","renderProps","clientId","onSuccess","tokenId","isSignedIn","buttonText","deleteBoardAPI","myHeaders","Headers","headers","addBoardAPI","name","updateBoardAPI","data","_id","updateTypeAPI","content","getMyBoardAPI","idBoard","requestOptions","getListBoard","handleCookie","string","slice","indexOf","moment","require","locale","BoardCard","board","index","deleteBoard","isEditName","setIsEditName","inputName","setInputName","UpdateNameBoard","res","CardGroup","key","Card","Body","width","height","marginTop","float","paddingTop","fontSize","Title","viewBox","fill","xmlns","fillRule","d","Text","dateCreate","format","AddNewBoardCard","addBoard","input","setInput","InputGroup","aria-label","aria-describedby","Append","ManageListBoardCard","listBoard","setListBoard","refesh","setRefesh","test","fetchListBoard","Container","Row","Col","xs","Array","isArray","map","TaskTagView","props","draggableId","provided","ref","innerRef","draggableProps","dragHandleProps","border","marginBottom","nameColumn","backgroundColor","padding","textAlign","editTag","idTag","TaskTagEdit","handleChange","doneTag","delTag","ColumnBoard","col","list","addTag","edit","droppableId","display","flexDirection","minHeight","droppableProps","item","toString","copyToClipboard","textField","createElement","innerText","appendChild","select","execCommand","remove","BoardTopBar","sendMessage","shared","noticeShared","setNoticeShared","delTagAPI","updateTagAPI","newContent","getMyTagsAPI","socket","io","Board","match","setBoard","setEdit","todo","doing","done","columns","setColumns","params","fetchMyBoard","Object","entries","reduce","wentwell","push","toimprove","actionitems","values","fetchMyTags","on","msg","emit","updateType","url","onDragEnd","source","destination","undefined","start","end","newList","filter","_","idx","splice","newCol","state","newStartList","newStartCol","newEndList","newEndCol","fluid","bcrypt","changePasswordAPI","oldPassword","newPassword","hashPassword","pw","password","genSalt","salt","hash","Error","updateAccountAPI","username","email","SignUp","inputRePassword","setInputRePassword","inputEmail","setInputEmail","Profile","account","setAccount","isEdit","setIsEdit","fetchAccountInformation","submitUpdateInfo","readOnly","required","hidden","ChangePass","setOldPassword","setNewPassword","reNewPassword","setReNewPassword","submitChangePassword","deleteAllCookies","cookies","split","i","eqPos","substr","App","React","setIsLogin","login","path","component","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.3c5b813e.chunk.js","sourcesContent":["import React from 'react';\r\nimport {Nav,Navbar,Form, FormControl, Button } from 'react-bootstrap';\r\nimport './Header.css';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\n\r\nconst Header=({isLogin,handleLogin})=>{\r\n  return(\r\n    <Navbar bg=\"primary\" variant=\"dark\">\r\n    <Navbar.Brand href=\"/\"><b>Sprint Retrospective</b></Navbar.Brand>\r\n    <Nav className=\"mr-auto\">\r\n      <Nav.Link href=\"/\">Home</Nav.Link>\r\n      <Nav.Link href=\"/profile\">Profile</Nav.Link>\r\n    </Nav>\r\n    <Form inline>\r\n      <FormControl type=\"text\" placeholder=\"Search\" className=\"mr-sm-2\" />\r\n      <Button variant=\"outline-light\">Search</Button>\r\n    </Form>\r\n    <Nav className=\"login\">\r\n      {!isLogin?<Nav.Link href=\"/login\"><Button variant=\"outline-light\">Đăng nhập</Button></Nav.Link>:<Nav.Link href='/logout'><Button variant=\"outline-light\">Đăng xuất</Button></Nav.Link>}\r\n    </Nav>\r\n  </Navbar>\r\n  )\r\n}\r\nexport default Header;","const Auth = (inputUsername,inputPassword) => {\r\n    return new Promise((resolve,reject)=>{\r\n        var urlencoded = new URLSearchParams();\r\n        urlencoded.append(\"username\", inputUsername);\r\n        urlencoded.append(\"password\", inputPassword);\r\n        var requestOptions = {\r\n            method: 'POST',\r\n            body: urlencoded,\r\n            redirect: 'follow'\r\n        };\r\n    \r\n        fetch(\"https://server-sprintretrospective.herokuapp.com/auth/login\", requestOptions)\r\n            .then(response => response.text())\r\n            .then(result => {\r\n                if (result.includes('access_token')) {\r\n                    document.cookie = `access_token=${JSON.parse(result).access_token}; max-age=3600`;\r\n                    resolve(true)\r\n                }\r\n                else {\r\n                    resolve(false)\r\n                }\r\n            })\r\n            .catch(error => console.log('error', error));\r\n    })\r\n}\r\nexport default Auth;","import React, { useState, useEffect } from 'react';\r\nimport { Form, Button } from 'react-bootstrap';\r\nimport { Redirect } from \"react-router-dom\";\r\nimport './Login.css';\r\nimport Auth from '../../api/authAPI';\r\nimport FacebookLogin from 'react-facebook-login/dist/facebook-login-render-props';\r\nimport { GoogleLogin } from 'react-google-login';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\n\r\nconst Login = ({ isLogin, handleLogin,type }) => {\r\n    const [inputUsername, setInputUsername] = useState('');\r\n    const [inputPassword, setInputPassword] = useState('');\r\n    const [noticeForm, setNoticeForm] = useState('');\r\n    const [redirect, setRedirect] = useState(null);\r\n    useEffect(()=>{\r\n        if(type==='logout') handleLogin(false);\r\n    },[]);\r\n    const onChangeUsername = (e) => {\r\n        setInputUsername(e.target.value);\r\n    }\r\n    const onChangePassword = (e) => {\r\n        setInputPassword(e.target.value);\r\n    }\r\n    const onLogin = async () => {\r\n        if (inputUsername === '') {\r\n            setNoticeForm(\"Vui lòng điền username\");\r\n            return;\r\n        }\r\n        else {\r\n            if (inputPassword === '') {\r\n                setNoticeForm(\"Vui lòng điền mật khẩu\");\r\n                return;\r\n            }\r\n            else {\r\n                if (inputPassword.length < 7) {\r\n                    setNoticeForm(\"Mat khau phai >= 7 ky tu\");\r\n                    return;\r\n                }\r\n                else {\r\n                    try {\r\n                        Auth(inputUsername, inputPassword).then((ans) => {\r\n                            if (ans) {\r\n                                handleLogin(true);\r\n                                setRedirect('/');\r\n                                setNoticeForm('Đăng nhập thành công');\r\n                            } else {\r\n                                setNoticeForm('Mật khẩu sai');\r\n                            }\r\n                        });\r\n                    } catch (error) {\r\n                        console.log(\"Error: \" + error.message);\r\n                        setNoticeForm('Xảy ra lỗi khi đăng nhập, vui lòng thử lại sau');\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n    const responseFacebook = (response) => {\r\n        console.log(response);\r\n        var urlencoded = new URLSearchParams();\r\n        urlencoded.append(\"access_token\", response.accessToken);\r\n        urlencoded.append(\"userID\", response.userID);\r\n        var requestOptions = {\r\n            method: 'POST',\r\n            body: urlencoded,\r\n            redirect: 'follow'\r\n        };\r\n\r\n        fetch(\"https://server-sprintretrospective.herokuapp.com/auth/facebook\", requestOptions)\r\n            .then(response => response.text())\r\n            .then(result => {\r\n                if (result.includes('access_token')) {\r\n                    document.cookie = `access_token=${JSON.parse(result).access_token}; max-age=3600`;\r\n                    handleLogin(true);\r\n                    setRedirect('/');\r\n                }\r\n                else {\r\n                    setNoticeForm('Login with Facebook fail');\r\n                }\r\n            })\r\n            .catch(error => console.log('error', error));\r\n    }\r\n    const responseGoogle = (response) => {\r\n        console.log(response);\r\n        var urlencoded = new URLSearchParams();\r\n        urlencoded.append(\"access_token\", response.tokenId);\r\n        var requestOptions = {\r\n            method: 'POST',\r\n            body: urlencoded,\r\n            redirect: 'follow'\r\n        };\r\n\r\n        fetch(\"https://server-sprintretrospective.herokuapp.com/auth/google\", requestOptions)\r\n            .then(response => response.text())\r\n            .then(result => {\r\n                if (result.includes('access_token')) {\r\n                    document.cookie = `access_token=${JSON.parse(result).access_token}; max-age=3600`;\r\n                    handleLogin(true);\r\n                    setRedirect('/');\r\n                }\r\n                else {\r\n                    setNoticeForm('Login with Google fail');\r\n                }\r\n            })\r\n            .catch(error => console.log('error', error));\r\n    }\r\n    if (redirect || isLogin === true) return <Redirect to='/'></Redirect>\r\n    return (\r\n        <Form className=\"mainLogin\">\r\n            <h5 style={{ color: 'blue' }}>Đăng nhập</h5>\r\n            <Form.Group controlId=\"username\">\r\n                <Form.Label >Username</Form.Label>\r\n                <Form.Control onChange={onChangeUsername} value={inputUsername} type=\"text\" placeholder=\"Enter your username\" className=\"input\" />\r\n            </Form.Group>\r\n            <Form.Group controlId=\"password\">\r\n                <Form.Label>Password</Form.Label>\r\n                <Form.Control onChange={onChangePassword} value={inputPassword} className=\"input\" type=\"password\" placeholder=\"Enter your password\" />\r\n            </Form.Group>\r\n            <Form.Group className=\"cbSavePass\" controlId=\"savepassword\">\r\n                <Form.Check type=\"checkbox\" label=\"Lưu mật khẩu\" />\r\n            </Form.Group>\r\n            <div className=\"notice\">{noticeForm}</div>\r\n            <div className=\"submit\">\r\n                <Button href='/signup' id=\"signup\" variant=\"primary\" type=\"button\">\r\n                    Đăng ký</Button>\r\n                <Button onClick={onLogin} id=\"signin\" variant=\"primary\" type=\"button\">\r\n                    Đăng nhập</Button>\r\n            </div>\r\n            <div className=\"buttonSignInGG\">\r\n                <FacebookLogin\r\n                    appId=\"383205282732112\"\r\n                    autoLoad={false}\r\n                    callback={responseFacebook}\r\n                    cssClass=\"my-facebook-button-class\"\r\n                    icon=\"fa-facebook\"\r\n                    render={renderProps => (\r\n                        <Button\r\n                            variant=\"secondary\" onClick={renderProps.onClick}>Login with Facebook</Button>\r\n                    )}\r\n\r\n                />\r\n                <GoogleLogin\r\n                    clientId=\"240672023608-4f2866cjcr4a85balfitk2eadkc7f4kc.apps.googleusercontent.com\"\r\n                    onSuccess={responseGoogle}\r\n                    isSignedIn={false}\r\n                    buttonText=\"Login with google\"\r\n                />\r\n            </div>\r\n        </Form>\r\n    )\r\n}\r\n\r\nexport default Login;","const getListBoard = (access_token) => {\r\n    return new Promise((resolve, reject) => {\r\n        var myHeaders = new Headers();\r\n        myHeaders.append(\"Authorization\", `Bearer ${access_token}`);\r\n\r\n        var requestOptions = {\r\n            method: 'GET',\r\n            headers: myHeaders,\r\n            redirect: 'follow'\r\n        };\r\n\r\n        fetch(\"https://server-sprintretrospective.herokuapp.com/boards\", requestOptions)\r\n            .then(response => response.text())\r\n            .then(result => {\r\n                resolve(JSON.parse(result));\r\n            })\r\n            .catch(error => console.log('error', error));\r\n    });\r\n}\r\nexport const deleteBoardAPI = (id, access_token) => {\r\n    return new Promise((resolve, reject) => {\r\n        var myHeaders = new Headers();\r\n        myHeaders.append(\"Authorization\", `Bearer ${access_token}`);\r\n        var urlencoded = new URLSearchParams();\r\n        urlencoded.append(\"_id\", id);\r\n\r\n        var requestOptions = {\r\n            method: 'POST',\r\n            headers: myHeaders,\r\n            body: urlencoded,\r\n            redirect: 'follow'\r\n        };\r\n\r\n        fetch(\"https://server-sprintretrospective.herokuapp.com/deleteboard\", requestOptions)\r\n            .then(response => response.text())\r\n            .then(result => {\r\n                resolve(result);\r\n            })\r\n            .catch(error => console.log('error', error));\r\n    });\r\n}\r\nexport const addBoardAPI = (name, access_token) => {\r\n    return new Promise((resolve, reject) => {\r\n        var myHeaders = new Headers();\r\n        myHeaders.append(\"Authorization\", `Bearer ${access_token}`);\r\n        var urlencoded = new URLSearchParams();\r\n        urlencoded.append(\"name\", name);\r\n\r\n\r\n        var requestOptions = {\r\n            method: 'POST',\r\n            headers: myHeaders,\r\n            body: urlencoded,\r\n            redirect: 'follow'\r\n        };\r\n\r\n        fetch(\"https://server-sprintretrospective.herokuapp.com/addboard\", requestOptions)\r\n            .then(response => response.text())\r\n            .then(result => {\r\n                resolve(result);\r\n            })\r\n            .catch(error => console.log('error', error));\r\n    });\r\n}\r\nexport const updateBoardAPI = (data) => {\r\n    return new Promise((resolve, reject) => {\r\n        var myHeaders = new Headers();\r\n        var urlencoded = new URLSearchParams();\r\n        urlencoded.append(\"_id\", data._id);\r\n        urlencoded.append(\"name\", data.name);\r\n        var requestOptions = {\r\n            method: 'POST',\r\n            headers: myHeaders,\r\n            body: urlencoded,\r\n            redirect: 'follow'\r\n        };\r\n\r\n        fetch(\"https://server-sprintretrospective.herokuapp.com/updateBoard\", requestOptions)\r\n            .then(response => response.text())\r\n            .then(result => {\r\n                console.log(result);\r\n                resolve(result);\r\n            })\r\n            .catch(error => console.log('error', error));\r\n    })\r\n}\r\nexport const updateTypeAPI = (type, content) => {\r\n    return new Promise((resolve, reject) => {\r\n        var myHeaders = new Headers();\r\n        var urlencoded = new URLSearchParams();\r\n        urlencoded.append(\"content\", content);\r\n        urlencoded.append(\"type\", type);\r\n\r\n        var requestOptions = {\r\n            method: 'POST',\r\n            headers: myHeaders,\r\n            body: urlencoded,\r\n            redirect: 'follow'\r\n        };\r\n\r\n        fetch(\"https://server-sprintretrospective.herokuapp.com/tag/changecolumn\", requestOptions)\r\n            .then(response => response.text())\r\n            .then(result => console.log(result))\r\n            .catch(error => console.log('error', error));\r\n    });\r\n}\r\nexport const getMyBoardAPI = (idBoard) => {\r\n    return new Promise((resolve, reject) => {\r\n        var myHeaders = new Headers();\r\n        var requestOptions = {\r\n            method: 'GET',\r\n            headers: myHeaders,\r\n            redirect: 'follow'\r\n        };\r\n\r\n        fetch(`https://server-sprintretrospective.herokuapp.com/board/${idBoard}`, requestOptions)\r\n            .then(response => response.text())\r\n            .then(result => {\r\n                console.log(JSON.parse(result));\r\n                resolve(JSON.parse(result));\r\n\r\n            })\r\n            .catch(error => console.log('error', error));\r\n    })\r\n\r\n}\r\nexport default getListBoard;","const handleCookie = (string) => {\r\n    const nameobj = string.slice(string.indexOf('access_token') + 13, string.length);\r\n    return nameobj;\r\n}\r\nexport default handleCookie;","import React, { useState } from 'react';\r\nimport { Card, Button, CardGroup } from 'react-bootstrap';\r\nimport {updateBoardAPI} from '../../api/boardAPI';\r\nimport handleCookie from '../../services/handleCookie';\r\nimport './BoardCard.css';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n//config datetime\r\nconst moment = require('moment');\r\nmoment.locale('vi');\r\nconst BoardCard = ({ board, index, deleteBoard }) => {\r\n  const [isEditName, setIsEditName] = useState(false);\r\n  const [inputName, setInputName] = useState(board.name);\r\n  const handleChange = (e) => {\r\n    setInputName(e.target.value);\r\n  }\r\n  const UpdateNameBoard=async()=>{\r\n    setIsEditName(false);\r\n    const access_token = await handleCookie(document.cookie);\r\n    updateBoardAPI({_id:board._id,name:inputName},access_token).then((res)=>{\r\n      if(res) console.log(\"update thanh cong\");\r\n    });\r\n  }\r\n  return (\r\n    <>\r\n      <CardGroup key={index} className=\"boardContainer\">\r\n        <Card.Body className=\"boardInformationDetail\">\r\n          {\r\n            isEditName ? <CardGroup>\r\n              <input\r\n                value={inputName}\r\n                style={{ width: \"100%\" }}\r\n                onChange={handleChange}\r\n              />\r\n              <Card.Link onClick={UpdateNameBoard}>\r\n                <Button variant=\"success\" style={{ height: \"20px\", marginTop: \"5px\", float: \"left\", paddingTop: \"0\", fontSize: \"12px\" }} >Done</Button>\r\n              </Card.Link>\r\n            </CardGroup> : <div className=\"headerBoardCard\"><Card.Title className=\"boardName\">{inputName}</Card.Title>\r\n                <Card.Link onClick={() => setIsEditName(true)}>\r\n                  <svg width=\"1em\" height=\"1em\" viewBox=\"0 0 16 16\" className=\"bi bi-pencil\" fill=\"black\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                    <path fillRule=\"evenodd\" d=\"M12.146.146a.5.5 0 0 1 .708 0l3 3a.5.5 0 0 1 0 .708l-10 10a.5.5 0 0 1-.168.11l-5 2a.5.5 0 0 1-.65-.65l2-5a.5.5 0 0 1 .11-.168l10-10zM11.207 2.5L13.5 4.793 14.793 3.5 12.5 1.207 11.207 2.5zm1.586 3L10.5 3.207 4 9.707V10h.5a.5.5 0 0 1 .5.5v.5h.5a.5.5 0 0 1 .5.5v.5h.293l6.5-6.5zm-9.761 5.175l-.106.106-1.528 3.821 3.821-1.528.106-.106A.5.5 0 0 1 5 12.5V12h-.5a.5.5 0 0 1-.5-.5V11h-.5a.5.5 0 0 1-.468-.325z\" />\r\n                  </svg>\r\n                </Card.Link></div>\r\n          }\r\n\r\n          <Card.Text className=\"boardDateCreate\">\r\n            Date created: {moment(board.dateCreate).format('LL')}\r\n          </Card.Text>\r\n          <div className=\"boardButton\">\r\n            <Button onClick={() => deleteBoard(board._id)} variant=\"outline-danger\">Delete</Button>\r\n            <Button href={`/boarddetail/${board._id}`} variant=\"outline-info\">View Detail</Button>\r\n          </div>\r\n        </Card.Body>\r\n      </CardGroup>\r\n    </>\r\n  )\r\n}\r\nexport default BoardCard;","import React, { useState } from 'react';\r\nimport { Card, Button, InputGroup, FormControl } from 'react-bootstrap';\r\nimport './BoardCard.css';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\n\r\nconst AddNewBoardCard = ({ addBoard }) => {\r\n    const [input, setInput] = useState('');\r\n    const handleChangeInput = e => {\r\n        setInput(e.target.value);\r\n    };\r\n    return (\r\n        <>\r\n            <Card key=\"add\" className=\"boardContainer\">\r\n                    <Card.Body className=\"boardAddNewBoard\">\r\n                        <div className=\"boardButton\">\r\n                            <InputGroup className=\"mb-3\">\r\n                                <FormControl\r\n                                    placeholder=\"Enter name to add new board\"\r\n                                    aria-label=\"Enter name to add new board\"\r\n                                    aria-describedby=\"basic-addon2\"\r\n                                    value={input}\r\n                                    onChange={handleChangeInput}\r\n                                />\r\n                                <InputGroup.Append>\r\n                                    <Button onClick={() => addBoard(input)} variant=\"outline-info\">Add</Button>\r\n                                </InputGroup.Append>\r\n                            </InputGroup>\r\n                        </div>\r\n                    </Card.Body>\r\n            </Card>\r\n        </>\r\n    )\r\n}\r\nexport default AddNewBoardCard;","import React, { useState, useEffect } from 'react';\r\nimport './ManageListBoardCard.css';\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { Container, Row, Col} from 'react-bootstrap';\r\nimport BoardCard from '../BoardCard/BoardCard'\r\nimport handleCookie from '../../services/handleCookie';\r\nimport AddNewBoardCard from '../BoardCard/AddNewBoardCard';\r\nimport getListBoard,{deleteBoardAPI, addBoardAPI} from '../../api/boardAPI';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nconst ManageListBoardCard = () => {\r\n    const [listBoard, setListBoard] = useState([]);\r\n    const [redirect, setRedirect] = useState(null);\r\n    const [refesh, setRefesh] = useState(true);\r\n    const deleteBoard = async (id) => {\r\n        const access_token = await handleCookie(document.cookie);\r\n        deleteBoardAPI(id,access_token).then((ans)=>{\r\n            console.log(ans);\r\n            setRefesh(!refesh);\r\n        });\r\n    };\r\n    const addBoard = async (name) => {\r\n        if (!name || /^\\s*$/.test(name)) {\r\n            return;\r\n        }\r\n        const access_token = await handleCookie(document.cookie);\r\n        addBoardAPI(name,access_token).then((res)=>{\r\n            console.log(res);\r\n            setRefesh(!refesh);\r\n        })\r\n        \r\n    };\r\n    useEffect(() => {\r\n        const fetchListBoard = async () => {\r\n            try {\r\n                if (!document.cookie.includes('access_token')) {\r\n                    console.log(\"k co cookie\")\r\n                    setRedirect('/login');\r\n                }\r\n                const access_token = await handleCookie(document.cookie);\r\n                getListBoard(access_token).then((ans)=>{\r\n                    setListBoard(ans);\r\n                })\r\n                \r\n            } catch (error) {\r\n                console.log(\"Error: \" + error.message);\r\n            }\r\n        }\r\n        fetchListBoard();\r\n    }, [refesh]);\r\n    if (redirect) return <Redirect to={redirect} />\r\n    else {\r\n        return (\r\n            <div className=\"mainBoardContainer\">\r\n                <h3>My Boards</h3>\r\n                <h4>Public boards <span style={{ color: 'black' }}>collaborate by sharing URL with people</span></h4>\r\n                <Container className=\"managerBoardContainer\">\r\n                    <Row>\r\n                        <Col xs={3}>\r\n                            <AddNewBoardCard addBoard={addBoard} />\r\n                        </Col>\r\n                        {\r\n                            Array.isArray(listBoard) ? listBoard.map((board, index) => {\r\n                                return (\r\n                                    <Col xs={3}>\r\n                                        <BoardCard deleteBoard={deleteBoard} board={board} index={index} />\r\n                                    </Col>\r\n                                )\r\n                            }) : null\r\n                        }\r\n                    </Row>\r\n                </Container>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default ManageListBoardCard;","import React from 'react';\r\nimport { Card, CardGroup } from 'react-bootstrap'\r\nimport './TaskTag.css';\r\nimport { Draggable } from 'react-beautiful-dnd';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\n\r\nconst TaskTagView = (props) => {\r\n  return (\r\n    <Draggable draggableId={props.text} index={props.index}>\r\n      {provided => (\r\n        <div\r\n          ref={provided.innerRef}\r\n          {...provided.draggableProps}\r\n          {...provided.dragHandleProps}\r\n        >\r\n          <Card  style={{ width: \"100%\", border: \"none\", color: \"white\", marginBottom: \"10px\" }}>\r\n            <Card.Body style={props.nameColumn === 'wentWell' ? { backgroundColor: \"#009688\", padding: \"0.5rem\" } : props.nameColumn === 'toImprove' ? { backgroundColor: \"#FF5722\", padding: \"0.5rem\" } : { backgroundColor: \"#E91E63\", padding: \"0.5rem\" }}>\r\n              <CardGroup>\r\n                <span style={{ width: '96%', textAlign: 'left' }}>{props.nameColumn === 'wentWell' ? '*' + props.text + '*' : props.text}</span>\r\n                <Card.Link onClick={() => props.editTag(props.idTag,props.text)}>\r\n                  <svg width=\"1em\" height=\"1em\" viewBox=\"0 0 16 16\" className=\"bi bi-pencil\" fill=\"white\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                    <path fillRule=\"evenodd\" d=\"M12.146.146a.5.5 0 0 1 .708 0l3 3a.5.5 0 0 1 0 .708l-10 10a.5.5 0 0 1-.168.11l-5 2a.5.5 0 0 1-.65-.65l2-5a.5.5 0 0 1 .11-.168l10-10zM11.207 2.5L13.5 4.793 14.793 3.5 12.5 1.207 11.207 2.5zm1.586 3L10.5 3.207 4 9.707V10h.5a.5.5 0 0 1 .5.5v.5h.5a.5.5 0 0 1 .5.5v.5h.293l6.5-6.5zm-9.761 5.175l-.106.106-1.528 3.821 3.821-1.528.106-.106A.5.5 0 0 1 5 12.5V12h-.5a.5.5 0 0 1-.5-.5V11h-.5a.5.5 0 0 1-.468-.325z\" />\r\n                  </svg>\r\n                </Card.Link>\r\n              </CardGroup>\r\n              <CardGroup style={{ float: 'right' }}>\r\n                <Card.Link href=\"#\">\r\n                  <svg style={{ marginBottom: \"5px\" }} width=\"1em\" height=\"1em\" viewBox=\"0 0 16 16\" className=\"bi bi-hand-thumbs-up\" fill=\"white\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                    <path fillRule=\"evenodd\" d=\"M6.956 1.745C7.021.81 7.908.087 8.864.325l.261.066c.463.116.874.456 1.012.965.22.816.533 2.511.062 4.51a9.84 9.84 0 0 1 .443-.051c.713-.065 1.669-.072 2.516.21.518.173.994.681 1.2 1.273.184.532.16 1.162-.234 1.733.058.119.103.242.138.363.077.27.113.567.113.856 0 .289-.036.586-.113.856-.039.135-.09.273-.16.404.169.387.107.819-.003 1.148a3.163 3.163 0 0 1-.488.901c.054.152.076.312.076.465 0 .305-.089.625-.253.912C13.1 15.522 12.437 16 11.5 16v-1c.563 0 .901-.272 1.066-.56a.865.865 0 0 0 .121-.416c0-.12-.035-.165-.04-.17l-.354-.354.353-.354c.202-.201.407-.511.505-.804.104-.312.043-.441-.005-.488l-.353-.354.353-.354c.043-.042.105-.14.154-.315.048-.167.075-.37.075-.581 0-.211-.027-.414-.075-.581-.05-.174-.111-.273-.154-.315L12.793 9l.353-.354c.353-.352.373-.713.267-1.02-.122-.35-.396-.593-.571-.652-.653-.217-1.447-.224-2.11-.164a8.907 8.907 0 0 0-1.094.171l-.014.003-.003.001a.5.5 0 0 1-.595-.643 8.34 8.34 0 0 0 .145-4.726c-.03-.111-.128-.215-.288-.255l-.262-.065c-.306-.077-.642.156-.667.518-.075 1.082-.239 2.15-.482 2.85-.174.502-.603 1.268-1.238 1.977-.637.712-1.519 1.41-2.614 1.708-.394.108-.62.396-.62.65v4.002c0 .26.22.515.553.55 1.293.137 1.936.53 2.491.868l.04.025c.27.164.495.296.776.393.277.095.63.163 1.14.163h3.5v1H8c-.605 0-1.07-.081-1.466-.218a4.82 4.82 0 0 1-.97-.484l-.048-.03c-.504-.307-.999-.609-2.068-.722C2.682 14.464 2 13.846 2 13V9c0-.85.685-1.432 1.357-1.615.849-.232 1.574-.787 2.132-1.41.56-.627.914-1.28 1.039-1.639.199-.575.356-1.539.428-2.59z\" />\r\n                  </svg>\r\n                </Card.Link>\r\n              </CardGroup>\r\n            </Card.Body>\r\n          </Card>\r\n        </div>\r\n      )}\r\n    </Draggable>\r\n\r\n  );\r\n}\r\n\r\nexport default TaskTagView;","import React, { useState } from 'react';\r\nimport { Card, CardGroup, Button } from 'react-bootstrap';\r\nimport './TaskTag.css';\r\nimport { Draggable } from 'react-beautiful-dnd';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\n\r\nconst TaskTagEdit = (props) => {\r\n    const [input, setInput] = useState(props.text);\r\n\r\n    const handleChange = (e) => {\r\n        setInput(e.target.value);\r\n    };\r\n    return (\r\n        <Draggable draggableId={props.text} index={props.index}>\r\n      {provided => (\r\n        <div\r\n          ref={provided.innerRef}\r\n          {...provided.draggableProps}\r\n          {...provided.dragHandleProps}\r\n        >\r\n        <Card  style={{color: \"white\", width: \"100%\", border: \"none\", marginBottom:\"10px\" }}>\r\n        <Card.Body style={props.nameColumn==='wentWell'?{backgroundColor: \"#009688\",padding: \"0.5rem\"}:props.nameColumn==='toImprove'?{backgroundColor: \"#FF5722\",padding: \"0.5rem\"}:{backgroundColor: \"#E91E63\",padding: \"0.5rem\"}}>\r\n            <Card.Text style={{ textAlign: 'left', fontSize: '18px' }}></Card.Text>\r\n                <CardGroup>\r\n                    <input\r\n                        value={input}\r\n                        style={{ width: \"100%\" }}\r\n                        onChange={handleChange}\r\n                    />\r\n                </CardGroup>\r\n                <Card.Link onClick={() => props.doneTag(props.idTag, input)}>\r\n                    <Button variant=\"success\" style={{ height: \"20px\", marginTop: \"5px\", float: \"left\", paddingTop: \"0\", fontSize: \"12px\" }} >Done</Button>\r\n                </Card.Link>\r\n\r\n                <CardGroup style={{ float: 'right' }}>\r\n                    <Card.Link href=\"#\">\r\n                        <svg style={{ marginBottom: \"5px\" }} width=\"1em\" height=\"1em\" viewBox=\"0 0 16 16\" className=\"bi bi-hand-thumbs-up\" fill=\"white\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                            <path fillRule=\"evenodd\" d=\"M6.956 1.745C7.021.81 7.908.087 8.864.325l.261.066c.463.116.874.456 1.012.965.22.816.533 2.511.062 4.51a9.84 9.84 0 0 1 .443-.051c.713-.065 1.669-.072 2.516.21.518.173.994.681 1.2 1.273.184.532.16 1.162-.234 1.733.058.119.103.242.138.363.077.27.113.567.113.856 0 .289-.036.586-.113.856-.039.135-.09.273-.16.404.169.387.107.819-.003 1.148a3.163 3.163 0 0 1-.488.901c.054.152.076.312.076.465 0 .305-.089.625-.253.912C13.1 15.522 12.437 16 11.5 16v-1c.563 0 .901-.272 1.066-.56a.865.865 0 0 0 .121-.416c0-.12-.035-.165-.04-.17l-.354-.354.353-.354c.202-.201.407-.511.505-.804.104-.312.043-.441-.005-.488l-.353-.354.353-.354c.043-.042.105-.14.154-.315.048-.167.075-.37.075-.581 0-.211-.027-.414-.075-.581-.05-.174-.111-.273-.154-.315L12.793 9l.353-.354c.353-.352.373-.713.267-1.02-.122-.35-.396-.593-.571-.652-.653-.217-1.447-.224-2.11-.164a8.907 8.907 0 0 0-1.094.171l-.014.003-.003.001a.5.5 0 0 1-.595-.643 8.34 8.34 0 0 0 .145-4.726c-.03-.111-.128-.215-.288-.255l-.262-.065c-.306-.077-.642.156-.667.518-.075 1.082-.239 2.15-.482 2.85-.174.502-.603 1.268-1.238 1.977-.637.712-1.519 1.41-2.614 1.708-.394.108-.62.396-.62.65v4.002c0 .26.22.515.553.55 1.293.137 1.936.53 2.491.868l.04.025c.27.164.495.296.776.393.277.095.63.163 1.14.163h3.5v1H8c-.605 0-1.07-.081-1.466-.218a4.82 4.82 0 0 1-.97-.484l-.048-.03c-.504-.307-.999-.609-2.068-.722C2.682 14.464 2 13.846 2 13V9c0-.85.685-1.432 1.357-1.615.849-.232 1.574-.787 2.132-1.41.56-.627.914-1.28 1.039-1.639.199-.575.356-1.539.428-2.59z\" />\r\n                        </svg>\r\n                    </Card.Link>\r\n                    <Card.Link onClick={() => props.delTag(props.idTag)}>\r\n                        <svg width=\"1em\" height=\"1em\" viewBox=\"0 0 16 16\" className=\"bi bi-trash-fill\" fill=\"white\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                            <path fillRule=\"evenodd\" d=\"M2.5 1a1 1 0 0 0-1 1v1a1 1 0 0 0 1 1H3v9a2 2 0 0 0 2 2h6a2 2 0 0 0 2-2V4h.5a1 1 0 0 0 1-1V2a1 1 0 0 0-1-1H10a1 1 0 0 0-1-1H7a1 1 0 0 0-1 1H2.5zm3 4a.5.5 0 0 1 .5.5v7a.5.5 0 0 1-1 0v-7a.5.5 0 0 1 .5-.5zM8 5a.5.5 0 0 1 .5.5v7a.5.5 0 0 1-1 0v-7A.5.5 0 0 1 8 5zm3 .5a.5.5 0 0 0-1 0v7a.5.5 0 0 0 1 0v-7z\" />\r\n                        </svg>\r\n                    </Card.Link>\r\n                </CardGroup>\r\n            </Card.Body>\r\n        </Card>\r\n        </div>\r\n    )}\r\n    </Draggable>\r\n    );\r\n}\r\n\r\nexport default TaskTagEdit;","import React, { useState } from 'react';\r\nimport { Row, Container, InputGroup, FormControl, Button } from 'react-bootstrap'\r\nimport TaskTagView from '../TaskTag/TaskTagView';\r\nimport TaskTagEdit from '../TaskTag/TaskTagEdit';\r\nimport { Droppable } from 'react-beautiful-dnd';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nconst ColumnBoard = ({ col: { list, id },type,nameColumn,name,addTag,doneTag,editTag,edit ,delTag}) => {\r\n    const [input, setInput] = useState('');\r\n    //edit\r\n    \r\n    const handleChangeInput = (e) => {\r\n        setInput(e.target.value);\r\n    }\r\n    \r\n    return (\r\n        <Container className=\"container\">\r\n            <Row className=\"row\">\r\n                <h5 style={{ float: \"left\" }}>{name}</h5>\r\n            </Row>\r\n            <Row className=\"row\" style={{ marginBottom: \"10px\" }}>\r\n                <InputGroup className=\"mb-3\">\r\n                    <FormControl\r\n                        placeholder=\"Enter things what you want\"\r\n                        value={input}\r\n                        onChange={handleChangeInput}\r\n                        aria-label=\"Enter things what you want\"\r\n                        aria-describedby=\"basic-addon2\"\r\n                    />\r\n                    <InputGroup.Append>\r\n                        <Button onClick={() => {\r\n                            addTag(input, type);\r\n                            setInput('');\r\n                        }}\r\n                            variant=\"outline-secondary\">Add</Button>\r\n                    </InputGroup.Append>\r\n                </InputGroup>\r\n            </Row>\r\n            \r\n            {\r\n                <Droppable droppableId={id}>\r\n                {provided => (\r\n                    <div\r\n                        style={{\r\n                            display: 'flex',\r\n                            flexDirection: 'column',\r\n                        }}\r\n                    >\r\n                        <div\r\n                            style={{\r\n                                display: 'flex',\r\n                                flexDirection: 'column',\r\n                                minHeight: '120px'\r\n                            }}\r\n                            {...provided.droppableProps}\r\n                            ref={provided.innerRef}\r\n                        >\r\n                            {list.map((item, index) =>{\r\n                                return(\r\n                                (item._id===edit.id)?<TaskTagEdit nameColumn={nameColumn} key={item._id} text={item.content} idTag={item._id} index={index} delTag={delTag} doneTag={doneTag} type={type.toString()} />:\r\n                                <TaskTagView nameColumn={nameColumn} key={item._id} text={item.content} idTag={item._id} index={index} editTag={editTag} type={type.toString()}/>\r\n                            )\r\n                            } )}\r\n                            {provided.placeholder}\r\n                        </div>\r\n                    </div>\r\n                )}\r\n            </Droppable>}\r\n            {/* {Array.isArray(tags) ? tags.map((tag, i) => {\r\n                return (\r\n                    <div>\r\n                        {\r\n                            tag.type === type ? edit.id ? <TaskTagEdit nameColumn={nameColumn} key={i} data={tag} delBoard={delTag} editTag={editTag} doneTag={doneTag} type={type.toString()} />\r\n                                : <TaskTagView nameColumn={nameColumn} key={i} data={tag} delBoard={delTag} editTag={editTag} doneTag={doneTag} type={type.toString()} />\r\n                                : null\r\n                        }\r\n                    </div>\r\n                )\r\n            }) : null\r\n            } */}\r\n        </Container>\r\n    )\r\n}\r\nexport default ColumnBoard;","import React, { useState, useEffect } from 'react';\r\nimport './BoardTopBar.css';\r\nimport { Card, Button, CardGroup } from 'react-bootstrap';\r\nimport { updateBoardAPI } from '../../api/boardAPI';\r\nimport handleCookie from '../../services/handleCookie';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nconst BoardTopBar = ({sendMessage, board, shared }) => {\r\n    const [isEditName, setIsEditName] = useState(false);\r\n    const [inputName, setInputName] = useState('Đang load');\r\n    useEffect(() => {\r\n        setInputName(board.name);\r\n    }, [board]);\r\n    console.log(board.name);\r\n    console.log(inputName);\r\n    const [noticeShared, setNoticeShared] = useState('');\r\n    const handleChange = (e) => {\r\n        console.log(inputName);\r\n        setInputName(e.target.value);\r\n    }\r\n    const UpdateNameBoard = async () => {\r\n        setIsEditName(false);\r\n        const access_token = await handleCookie(document.cookie);\r\n        updateBoardAPI({ _id: board._id, name: inputName }, access_token).then((res) => {\r\n            if (res) {\r\n                console.log(\"update thanh cong\");\r\n                sendMessage();\r\n            }\r\n        });\r\n    }\r\n    const handleClickShareBoard = () => {\r\n        copyToClipboard('https://app-sprint-retrospective.herokuapp.com' + shared);\r\n        setNoticeShared('Đường dẫn chia sẻ đã được lưu vào bộ nhớ đệm');\r\n    }\r\n    return (\r\n        <div className=\"boardTopBar\">\r\n            {isEditName ? <CardGroup>\r\n                <input\r\n                    value={inputName}\r\n                    style={{ width: \"100%\" }}\r\n                    onChange={handleChange}\r\n                />\r\n                <Card.Link onClick={UpdateNameBoard}>\r\n                    <Button variant=\"success\" style={{ height: \"20px\", marginTop: \"5px\", float: \"left\", paddingTop: \"0\", fontSize: \"12px\" }} >Done</Button>\r\n                </Card.Link>\r\n            </CardGroup> : <div className=\"groundNameBoard\">\r\n                    <h3>{inputName}</h3>\r\n                    <div className=\"iconEditBoardName\" onClick={() => setIsEditName(true)}><svg width=\"1em\" height=\"1em\" viewBox=\"0 0 16 16\" className=\"bi bi-pencil\" fill=\"black\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                        <path fillRule=\"evenodd\" d=\"M12.146.146a.5.5 0 0 1 .708 0l3 3a.5.5 0 0 1 0 .708l-10 10a.5.5 0 0 1-.168.11l-5 2a.5.5 0 0 1-.65-.65l2-5a.5.5 0 0 1 .11-.168l10-10zM11.207 2.5L13.5 4.793 14.793 3.5 12.5 1.207 11.207 2.5zm1.586 3L10.5 3.207 4 9.707V10h.5a.5.5 0 0 1 .5.5v.5h.5a.5.5 0 0 1 .5.5v.5h.293l6.5-6.5zm-9.761 5.175l-.106.106-1.528 3.821 3.821-1.528.106-.106A.5.5 0 0 1 5 12.5V12h-.5a.5.5 0 0 1-.5-.5V11h-.5a.5.5 0 0 1-.468-.325z\" />\r\n                    </svg></div>\r\n                </div>}\r\n            <div className=\"groundShareBoard\">\r\n                <p className=\"note\">{noticeShared}</p>\r\n                <button onClick={handleClickShareBoard} className=\"shareButton\">Share</button>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\nconst copyToClipboard = (text) => {\r\n    console.log('text', text)\r\n    var textField = document.createElement('textarea')\r\n    textField.innerText = text\r\n    document.body.appendChild(textField)\r\n    textField.select()\r\n    document.execCommand('copy')\r\n    textField.remove()\r\n}\r\nexport default BoardTopBar;","export const delTagAPI=(idTag)=>{\r\n    return new Promise((resolve, reject) => {\r\n        var myHeaders = new Headers();\r\n        var urlencoded = new URLSearchParams();\r\n        urlencoded.append(\"_id\", idTag);\r\n\r\n        var requestOptions = {\r\n            method: 'POST',\r\n            headers: myHeaders,\r\n            body: urlencoded,\r\n            redirect: 'follow'\r\n        };\r\n\r\n        fetch(\"https://server-sprintretrospective.herokuapp.com/tag/deletetag\", requestOptions)\r\n            .then(response => response.text())\r\n            .then(result => resolve(result))\r\n            .catch(error => console.log('error', error));\r\n    });\r\n}\r\nexport const updateTagAPI=(idTag,newContent)=>{\r\n    return new Promise((resolve,reject)=>{\r\n        var myHeaders = new Headers();\r\n        var urlencoded = new URLSearchParams();\r\n        urlencoded.append(\"content\", newContent);\r\n        urlencoded.append(\"_id\", idTag);\r\n\r\n        var requestOptions = {\r\n            method: 'POST',\r\n            headers: myHeaders,\r\n            body: urlencoded,\r\n            redirect: 'follow'\r\n        };\r\n\r\n        fetch(\"https://server-sprintretrospective.herokuapp.com/tag/updatetag\", requestOptions)\r\n            .then(response => response.text())\r\n            .then(result => {\r\n                console.log(result);\r\n                resolve(true);\r\n            })\r\n            .catch(error => console.log('error', error));\r\n    })\r\n}\r\nexport const getMyTagsAPI=(idBoard)=>{\r\n    return new Promise((resolve,reject)=>{\r\n        var myHeaders = new Headers();\r\n            var requestOptions = {\r\n                method: 'GET',\r\n                headers: myHeaders,\r\n                redirect: 'follow'\r\n            };\r\n\r\n            fetch(`https://server-sprintretrospective.herokuapp.com/boardetail/${idBoard}`, requestOptions)\r\n                .then(response => response.text())\r\n                .then(result => {\r\n                    console.log(JSON.parse(result));\r\n                    resolve(JSON.parse(result));\r\n                })\r\n                .catch(error => console.log('error', error));\r\n    })\r\n}","import React, { useEffect, useState } from 'react';\r\nimport './Board.css';\r\nimport { Row, Col, Container } from 'react-bootstrap'\r\nimport ColumnBoard from '../ColumnBoard/ColumnBoard';\r\nimport BoardTopBar from '../BoardTopBar/BoardTopBar';\r\nimport { DragDropContext } from 'react-beautiful-dnd';\r\nimport { delTagAPI, updateTagAPI,getMyTagsAPI } from '../../api/tagAPI';\r\nimport {updateTypeAPI,getMyBoardAPI} from '../../api/boardAPI';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n// socket\r\nimport io from 'socket.io-client';\r\n\r\n//decrale server\r\nconst socket = io('https://server-sprintretrospective.herokuapp.com');\r\n\r\n\r\nconst Board = ({ match }) => {\r\n    const [board, setBoard] = useState([]);\r\n    const [refesh, setRefesh] = useState(true);\r\n    const [edit, setEdit] = useState({\r\n        id: null,\r\n        value: ''\r\n    });\r\n    const initialColumns = {\r\n        todo: {\r\n            id: 'wentwell',\r\n            list: []\r\n        },\r\n        doing: {\r\n            id: 'toimprove',\r\n            list: []\r\n        },\r\n        done: {\r\n            id: 'actionitems',\r\n            list: []\r\n        }\r\n    }\r\n    const [columns, setColumns] = useState(initialColumns);\r\n    useEffect(() => {\r\n        const fetchMyBoard = async () => {\r\n            getMyBoardAPI(match.params.id).then((res)=>{\r\n                setBoard(res);\r\n            })\r\n        }\r\n        fetchMyBoard();\r\n    }, [match.params.id]);\r\n    useEffect(() => {\r\n        const fetchMyTags = async () => {\r\n            getMyTagsAPI(match.params.id).then((res)=>{\r\n                const ans = Object.entries(res.reduce((data, item) => {\r\n                    const { type } = item;\r\n                    if (type === 1) data.wentwell.push({ _id: item._id, content: item.content });\r\n                    if (type === 2) data.toimprove.push({ _id: item._id, content: item.content });\r\n                    if (type === 3) data.actionitems.push({ _id: item._id, content: item.content });\r\n                    return data;\r\n                }, {\r\n                    wentwell: [], toimprove: [], actionitems: []\r\n                }));\r\n                console.log(ans);\r\n                setColumns({\r\n                    wentwell: {\r\n                        id: 'wentwell',\r\n                        list: Object.values(Object.values(ans[0])[1]) ? Object.values(Object.values(ans[0])[1]) : [],\r\n                    },\r\n                    toimprove: {\r\n                        id: 'toimprove',\r\n                        list: Object.values(ans[1][1]) ? Object.values(Object.values(ans[1])[1]) : []\r\n                    },\r\n                    actionitems: {\r\n                        id: 'actionitems',\r\n                        list: Object.values(Object.values(ans[2])[1]) ? Object.values(Object.values(ans[2])[1]) : []\r\n                    }\r\n                })\r\n            })\r\n        }\r\n        fetchMyTags();\r\n    }, [refesh, match.params.id]);\r\n    //socket\r\n    useEffect(() => {\r\n        const receivedMessage = (message) => {\r\n            if (message.idBoard) {\r\n                if (message.idBoard === match.params.id) {\r\n                    setRefesh(!refesh);\r\n                    console.log(message.idBoard);\r\n                }\r\n            }\r\n        }\r\n        socket.on('msgToClient', (msg) => {\r\n            receivedMessage(msg);\r\n        })\r\n    }, [match.params.id,refesh,columns]);\r\n\r\n    const sendMessage = () => {\r\n        const message = {\r\n            idBoard: board._id\r\n        }\r\n        socket.emit('msgToServer', message);\r\n    }\r\n\r\n    const doneTag = async (id, value) => {\r\n        setEdit({\r\n            id: null,\r\n            value: value,\r\n        });\r\n        await updateTagAPI(id, value);\r\n        setRefesh(!refesh);\r\n        sendMessage();\r\n    }\r\n    const delTag = async (idTag) => {\r\n        await delTagAPI(idTag);\r\n        setRefesh(!refesh);\r\n        sendMessage();\r\n    };\r\n\r\n    const updateType = async (type, content) => {\r\n        await updateTypeAPI(type,content);\r\n        sendMessage();\r\n    }\r\n    const onDragEnd = ({ source, destination }) => {\r\n        // Make sure we have a valid destination\r\n        if (destination === undefined || destination === null) return null\r\n\r\n        // If the source and destination columns are the same\r\n        // AND if the index is the same, the item isn't moving\r\n        if (\r\n            source.droppableId === destination.droppableId &&\r\n            destination.index === source.index\r\n        )\r\n            return null\r\n\r\n\r\n        // Set start and end variables\r\n        const start = columns[source.droppableId]\r\n        const end = columns[destination.droppableId]\r\n\r\n        // If start is the same as end, we're in the same column\r\n        if (start === end) {\r\n            // Move the item within the list\r\n            // Start by making a new list without the dragged item\r\n            const newList = start.list.filter(\r\n                (_, idx) => idx !== source.index\r\n            )\r\n\r\n            // Then insert the item at the right location\r\n            newList.splice(destination.index, 0, start.list[source.index])\r\n\r\n            // Then create a new copy of the column object\r\n            const newCol = {\r\n                id: start.id,\r\n                list: newList\r\n            }\r\n\r\n            // Update the state\r\n            setColumns(state => ({ ...state, [newCol.id]: newCol }))\r\n            return null\r\n        } else {\r\n            // If start is different from end, we need to update multiple columns\r\n            // Filter the start list like before\r\n            updateType(end.id === 'wentwell' ? 1 : end.id === 'toimprove' ? 2 : 3, start.list[source.index].content);\r\n            sendMessage();\r\n            const newStartList = start.list.filter(\r\n                (_, idx) => idx !== source.index\r\n            )\r\n\r\n            // Create a new start column\r\n            const newStartCol = {\r\n                id: start.id,\r\n                list: newStartList\r\n            }\r\n\r\n            // Make a new end list array\r\n            const newEndList = end.list\r\n\r\n            // Insert the item into the end list\r\n            newEndList.splice(destination.index, 0, start.list[source.index])\r\n\r\n            // Create a new end column\r\n            const newEndCol = {\r\n                id: end.id,\r\n                list: newEndList\r\n            }\r\n\r\n            // Update the state\r\n            setColumns(state => ({\r\n                ...state,\r\n                [newStartCol.id]: newStartCol,\r\n                [newEndCol.id]: newEndCol\r\n            }))\r\n            return null\r\n        }\r\n    }\r\n    const addTag = async (text, type) => {\r\n        if (!text || /^\\s*$/.test(text)) {\r\n            return;\r\n        }\r\n        console.log(text + ' type ' + type);\r\n\r\n        var myHeaders = new Headers();\r\n        var urlencoded = new URLSearchParams();\r\n        urlencoded.append(\"content\", text);\r\n        urlencoded.append(\"type\", type);\r\n        urlencoded.append(\"idBoard\", board._id);\r\n\r\n\r\n        var requestOptions = {\r\n            method: 'POST',\r\n            headers: myHeaders,\r\n            body: urlencoded,\r\n            redirect: 'follow'\r\n        };\r\n\r\n        fetch(\"https://server-sprintretrospective.herokuapp.com/tag/addtag\", requestOptions)\r\n            .then(response => response.text())\r\n            .then(result => {\r\n                console.log(result);\r\n                setRefesh(!refesh);\r\n            })\r\n            .catch(error => console.log('error', error));\r\n        sendMessage();\r\n    };\r\n    const editTag = (id, value) => {\r\n        console.log(value);\r\n        setEdit({\r\n            id: id,\r\n            value: value\r\n        })\r\n    }\r\n    return (\r\n        <>\r\n            <BoardTopBar sendMessage={sendMessage} board={board} shared={match.url} />\r\n            <DragDropContext onDragEnd={onDragEnd}>\r\n                <Container fluid style={{ padding: '30px 40px' }}>\r\n                    <Row>\r\n                        {\r\n                            Object.values(columns).map((col) => (\r\n                                <Col>{\r\n                                    col.id === 'wentwell' ?\r\n                                        <ColumnBoard doneTag={doneTag} delTag={delTag} edit={edit} editTag={editTag} addTag={addTag} name=\"Went Well\" col={col} key={col.id} match={match} type={1} idBoard={board._id} nameColumn=\"wentWell\" />\r\n                                        : col.id === 'toimprove' ?\r\n                                            <ColumnBoard doneTag={doneTag} delTag={delTag} edit={edit} editTag={editTag} addTag={addTag} name=\"To Improve\" col={col} key={col.id} match={match} type={2} idBoard={board._id} nameColumn=\"toImprove\" />\r\n                                            : <ColumnBoard doneTag={doneTag} delTag={delTag} edit={edit} editTag={editTag} addTag={addTag} name=\"Action Items\" col={col} key={col.id} match={match} type={3} idBoard={board._id} nameColumn=\"actionItems\" />\r\n                                }</Col>\r\n                            ))\r\n                        }\r\n                    </Row>\r\n                </Container>\r\n            </DragDropContext>\r\n        </>\r\n    )\r\n}\r\nexport default Board;","const bcrypt = require('bcryptjs');\r\nconst updateAccountAPI = (data, access_token) => {\r\n    return new Promise((resolve, reject) => {\r\n        var myHeaders = new Headers();\r\n        myHeaders.append(\"Authorization\", `Bearer ${access_token}`);\r\n        var urlencoded = new URLSearchParams();\r\n        urlencoded.append(\"username\", data.username);\r\n        urlencoded.append(\"email\", data.email);\r\n        urlencoded.append(\"name\", data.name);\r\n        var requestOptions = {\r\n            method: 'POST',\r\n            headers: myHeaders,\r\n            body: urlencoded,\r\n            redirect: 'follow'\r\n        };\r\n\r\n        fetch(\"https://server-sprintretrospective.herokuapp.com/profile\", requestOptions)\r\n            .then(response => response.text())\r\n            .then(result => {\r\n                console.log(result);\r\n                resolve(result);\r\n            })\r\n            .catch(error => console.log('error', error));\r\n    })\r\n}\r\nexport const registerAPI = (data) => {\r\n    return new Promise((resolve, reject) => {\r\n        var urlencoded = new URLSearchParams();\r\n        urlencoded.append(\"name\", data.name);\r\n        urlencoded.append(\"username\", data.username);\r\n        urlencoded.append(\"password\", data.pw);\r\n        urlencoded.append(\"email\", data.email);\r\n\r\n        var requestOptions = {\r\n            method: 'POST',\r\n            body: urlencoded,\r\n            redirect: 'follow'\r\n        };\r\n\r\n        fetch(\"https://server-sprintretrospective.herokuapp.com/accounts/register\", requestOptions)\r\n            .then(response => response.text())\r\n            .then(result => {\r\n                console.log(result);\r\n                if(result==='true') resolve(true);\r\n                else resolve(false);\r\n            })\r\n            .catch(error => console.log('error', error));\r\n    })\r\n}\r\nexport const changePasswordAPI = (access_token, oldPassword, newPassword) => {\r\n    return new Promise((resolve, reject) => {\r\n        var myHeaders = new Headers();\r\n        myHeaders.append(\"Authorization\", `Bearer ${access_token}`);\r\n        hashPassword(newPassword).then((pw) => {\r\n            var urlencoded = new URLSearchParams();\r\n            urlencoded.append(\"oldpassword\", oldPassword);\r\n            urlencoded.append(\"newpassword\", pw);\r\n            var requestOptions = {\r\n                method: 'POST',\r\n                headers: myHeaders,\r\n                body: urlencoded,\r\n                redirect: 'follow'\r\n            };\r\n\r\n            fetch(\"https://server-sprintretrospective.herokuapp.com/changepassword\", requestOptions)\r\n                .then(response => response.text())\r\n                .then(result => {\r\n                    if (result === 'false') {\r\n                        resolve(false);\r\n                    } else {\r\n                        resolve(true);\r\n                    }\r\n                })\r\n                .catch(error => console.log('error', error));\r\n        })\r\n    });\r\n\r\n}\r\nconst hashPassword = async (password) => {\r\n    try {\r\n        const salt = await bcrypt.genSalt(10);\r\n        var result = await bcrypt.hash(password, salt);\r\n        return result;\r\n    } catch (error) {\r\n        throw new Error('Hashing failed', error)\r\n    }\r\n}\r\nexport default updateAccountAPI;","import React, { useState } from 'react';\r\nimport { Form, Button } from 'react-bootstrap';\r\nimport { Redirect } from \"react-router-dom\";\r\nimport './Login.css';\r\nimport { registerAPI } from '../../api/accountAPI';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nconst bcrypt = require('bcryptjs');\r\n\r\nconst SignUp = () => {\r\n    const [inputUsername, setInputUsername] = useState('');\r\n    const [inputPassword, setInputPassword] = useState('');\r\n    const [inputRePassword, setInputRePassword] = useState('');\r\n    const [inputName, setInputName] = useState('');\r\n    const [inputEmail, setInputEmail] = useState('');\r\n    const [noticeForm, setNoticeForm] = useState('');\r\n    const [redirect, setRedirect] = useState(null);\r\n    if (document.cookie.includes('access_token')) {\r\n        setRedirect('/');\r\n    }\r\n    const onChangeUsername = (e) => {\r\n        setInputUsername(e.target.value);\r\n    }\r\n    const onChangePassword = (e) => {\r\n        setInputPassword(e.target.value);\r\n    }\r\n    const onChangeRePassword = (e) => {\r\n        setInputRePassword(e.target.value);\r\n    }\r\n    const onChangeName = (e) => {\r\n        setInputName(e.target.value);\r\n    }\r\n    const onChangeEmail = (e) => {\r\n        setInputEmail(e.target.value);\r\n    }\r\n    const onRegister = () => {\r\n        if (inputUsername === \"\" || inputName === \"\" || inputPassword === \"\" || inputEmail === \"\") {\r\n            setNoticeForm('Không điền full dữ liệu');\r\n            return;\r\n        } else {\r\n            if (inputPassword.length < 7) {\r\n                setNoticeForm('Mat khau phai >= 7 ky tu');\r\n                return;\r\n            }\r\n            else {\r\n                if (inputPassword !== inputRePassword) {\r\n                    setNoticeForm('Mat khau nhap lai khong giong mat khau');\r\n                    return;\r\n                } else {\r\n                    if (!inputEmail.includes('@')) {\r\n                        setNoticeForm('Email không đúng định dạng');\r\n                        return;\r\n                    } else {\r\n                        hashPassword(inputPassword).then((pw) => {\r\n                            console.log(pw);\r\n                            try {\r\n                                registerAPI({ username: inputUsername, name: inputName, email: inputEmail, pw: pw }).then((res) => {\r\n                                    if (res===true) {\r\n                                        setNoticeForm('Register success');\r\n                                        setInputUsername('');\r\n                                        setInputPassword('');\r\n                                        setInputRePassword('');\r\n                                        setInputName('');\r\n                                        setInputEmail('');\r\n                                    }\r\n                                    else setNoticeForm('Register fail');\r\n                                })\r\n                            } catch (error) {\r\n                                console.log(\"Error: \" + error.message);\r\n                                setNoticeForm('Register fail');\r\n                            }\r\n                        })\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n    if (redirect) return <Redirect to={redirect} />\r\n    return (\r\n        <div>\r\n            <Form className=\"mainLogin\">\r\n                <h5 style={{ color: 'blue' }}>Register</h5>\r\n                <Form.Group controlId=\"name\">\r\n                    <Form.Label >Name</Form.Label>\r\n                    <Form.Control onChange={onChangeName} value={inputName} type=\"text\" placeholder=\"Enter your Name\" className=\"input\" />\r\n                </Form.Group>\r\n                <Form.Group controlId=\"email\">\r\n                    <Form.Label >Email</Form.Label>\r\n                    <Form.Control onChange={onChangeEmail} value={inputEmail} type=\"text\" placeholder=\"Enter your Email\" className=\"input\" />\r\n                </Form.Group>\r\n                <Form.Group controlId=\"username\">\r\n                    <Form.Label >Username</Form.Label>\r\n                    <Form.Control onChange={onChangeUsername} value={inputUsername} type=\"text\" placeholder=\"Enter your username\" className=\"input\" />\r\n                </Form.Group>\r\n                <Form.Group controlId=\"password\">\r\n                    <Form.Label>Password</Form.Label>\r\n                    <Form.Control onChange={onChangePassword} value={inputPassword} className=\"input\" type=\"password\" />\r\n                </Form.Group>\r\n                <Form.Group controlId=\"repassword\">\r\n                    <Form.Label>Retype Password</Form.Label>\r\n                    <Form.Control onChange={onChangeRePassword} value={inputRePassword} className=\"input\" type=\"password\" />\r\n                </Form.Group>\r\n                <div className=\"notice\">{noticeForm}</div>\r\n                <div className=\"register\">\r\n                    <Button onClick={onRegister} id=\"signup\" variant=\"primary\" type=\"button\">\r\n                        Register</Button>\r\n                </div>\r\n            </Form>\r\n        </div>\r\n    )\r\n}\r\nconst hashPassword = async (password) => {\r\n    try {\r\n        const salt = await bcrypt.genSalt(10);\r\n        var result = await bcrypt.hash(password, salt);\r\n        return result;\r\n    } catch (error) {\r\n        throw new Error('Hashing failed', error)\r\n    }\r\n}\r\nexport default SignUp;","import React, { useState, useEffect } from 'react';\r\nimport { Form, Button } from 'react-bootstrap';\r\nimport { Redirect } from \"react-router-dom\";\r\nimport handleCookie from '../../services/handleCookie';\r\nimport updateAccountAPI from '../../api/accountAPI';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nconst Profile = () => {\r\n    const [account, setAccount] = useState({ name: \"\", username: \"\", email: \"\" });\r\n    const [isEdit, setIsEdit] = useState(false);\r\n    const [redirect, setRedirect] = useState(null);\r\n    const [noticeForm, setNoticeForm] = useState('');\r\n    useEffect(() => {\r\n        const fetchAccountInformation = async () => {\r\n            if (!document.cookie.includes('access_token')) {\r\n                setRedirect('/login');\r\n            }\r\n            const access_token = await handleCookie(document.cookie);\r\n            try {\r\n                var myHeaders = new Headers();\r\n                myHeaders.append(\"Authorization\", `Bearer ${access_token}`);\r\n\r\n                var requestOptions = {\r\n                    method: 'GET',\r\n                    headers: myHeaders,\r\n                    redirect: 'follow'\r\n                };\r\n\r\n                fetch(\"https://server-sprintretrospective.herokuapp.com/profile\", requestOptions)\r\n                    .then(response => response.text())\r\n                    .then(result => {\r\n                        setAccount(JSON.parse(result));\r\n                    })\r\n                    .catch(error => console.log('error', error));\r\n            } catch (error) {\r\n                console.log(\"Error: \" + error.message);\r\n            }\r\n        }\r\n        fetchAccountInformation();\r\n    }, [])\r\n    const handleChangeInputName = (e) => {\r\n\r\n        setAccount({\r\n            name: e.target.value,\r\n            username: account.username,\r\n            email: account.email,\r\n        })\r\n    }\r\n    const handleChangeInputEmail = (e) => {\r\n        setAccount({\r\n            name: account.name,\r\n            username: account.username,\r\n            email: e.target.value,\r\n        })\r\n    }\r\n    const handleUpdateInfo = () => {\r\n        setIsEdit(true);\r\n    }\r\n    const submitUpdateInfo = async() => {\r\n        if (account.username === \"\" || account.name === \"\" || account.email === \"\") {\r\n            console.log(\"Không điền full dữ liệu\");\r\n            return;\r\n        } else {\r\n            try {\r\n                if (!document.cookie.includes('access_token')) {\r\n                    setRedirect('/login');\r\n                }\r\n                const access_token = await handleCookie(document.cookie);\r\n                updateAccountAPI(account,access_token).then((res)=>{\r\n                    console.log(res);\r\n                    setIsEdit(false);\r\n                    setNoticeForm('Cập nhật thông tin thành công');\r\n                })\r\n                \r\n            } catch (error) {\r\n                console.log(\"Error: \" + error.message);\r\n            }\r\n        }\r\n    }\r\n    if(redirect) return <Redirect to={redirect}></Redirect>\r\n    return (\r\n        <div className=\"profileContainer\">\r\n            <Form className=\"mainLogin\">\r\n                <h5 style={{ color: 'blue' }}>Profile</h5>\r\n                <Form.Group controlId=\"username\">\r\n                    <Form.Label >Username</Form.Label>\r\n                    <Form.Control readOnly={true} value={account.username} type=\"text\" placeholder=\"Enter your username\" className=\"input\" />\r\n                </Form.Group>\r\n                <Form.Group controlId=\"name\">\r\n                    <Form.Label>Name</Form.Label>\r\n                    <Form.Control readOnly={!isEdit} onChange={handleChangeInputName} value={account.name} className=\"input\" placeholder=\"Enter your name\" />\r\n                </Form.Group>\r\n                <Form.Group controlId=\"email\">\r\n                    <Form.Label>Email</Form.Label>\r\n                    <Form.Control readOnly={!isEdit} onChange={handleChangeInputEmail} value={account.email} className=\"input\" placeholder=\"Enter your email\" required={true} />\r\n                </Form.Group>\r\n                <div className=\"notice\">{noticeForm}</div>\r\n                <div className=\"submit\">\r\n                    <Button href='/changepassword' id=\"changePass\" variant=\"primary\" type=\"button\">\r\n                        Đổi mật khẩu</Button>\r\n                    <Button onClick={handleUpdateInfo} hidden={isEdit} id=\"updateInfo\" variant=\"primary\" type=\"button\">\r\n                        Cập nhật thông tin</Button>\r\n                    <Button onClick={submitUpdateInfo} hidden={!isEdit} id=\"savaInfo\" variant=\"primary\" type=\"button\">\r\n                        Lưu</Button>\r\n                </div>\r\n            </Form>\r\n        </div>\r\n    )\r\n}\r\nexport default Profile;","import React, { useState } from 'react';\r\nimport handleCookie from '../../services/handleCookie';\r\nimport { Form, Button } from 'react-bootstrap';\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { changePasswordAPI } from '../../api/accountAPI'\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nconst ChangePass = () => {\r\n    const [oldPassword, setOldPassword] = useState('');\r\n    const [newPassword, setNewPassword] = useState('');\r\n    const [reNewPassword, setReNewPassword] = useState('');\r\n    const [redirect, setRedirect] = useState(null);\r\n    const [noticeForm, setNoticeForm] = useState('');\r\n    const handleChangeOldPassword = (e) => {\r\n        setOldPassword(e.target.value);\r\n    }\r\n    const handleChangeNewPassword = (e) => {\r\n        setNewPassword(e.target.value);\r\n    }\r\n    const handleChangeRenewPassword = (e) => {\r\n        setReNewPassword(e.target.value);\r\n    }\r\n    const submitChangePassword = async () => {\r\n        if (oldPassword === \"\" || newPassword === \"\" || reNewPassword === \"\") {\r\n            setNoticeForm('Vui lòng điền đầy đủ thông tin');\r\n            return;\r\n        } else {\r\n            try {\r\n                if (!document.cookie.includes('access_token')) {\r\n                    setRedirect('/login');\r\n                }\r\n                if (reNewPassword !== newPassword) {\r\n                    setNoticeForm('Mật khẩu mới và retype mật khẩu mới không trùng khớp');\r\n                    return;\r\n                } else {\r\n                    if (newPassword.length < 7) {\r\n                        setNoticeForm('Độ dài mật khẩu phải >=7');\r\n                    }\r\n                }\r\n                const access_token = await handleCookie(document.cookie);\r\n                changePasswordAPI(access_token, oldPassword, newPassword).then((ans) => {\r\n                    if (ans === true) {\r\n                        setNoticeForm('Đổi mật khẩu thành công');\r\n                        setOldPassword('');\r\n                        setNewPassword('');\r\n                        setReNewPassword('');\r\n                        return;\r\n                    } else {\r\n                        console.log(ans);\r\n                        setNoticeForm('Mật khẩu sai');\r\n                        return;\r\n                    }\r\n                })\r\n\r\n\r\n\r\n\r\n            } catch (error) {\r\n                console.log(\"Error: \" + error.message);\r\n            }\r\n        }\r\n    }\r\n    if (redirect) return <Redirect to={redirect}></Redirect>\r\n    return (\r\n        <div className=\"profileContainer\">\r\n            <Form className=\"mainLogin\">\r\n                <h5 style={{ color: 'blue' }}>Profile</h5>\r\n                <Form.Group controlId=\"username\">\r\n                    <Form.Label >Old Password</Form.Label>\r\n                    <Form.Control value={oldPassword} onChange={handleChangeOldPassword} type=\"password\" className=\"input\" />\r\n                </Form.Group>\r\n                <Form.Group controlId=\"name\">\r\n                    <Form.Label>New Password</Form.Label>\r\n                    <Form.Control onChange={handleChangeNewPassword} value={newPassword} className=\"input\" type='password' />\r\n                </Form.Group>\r\n                <Form.Group controlId=\"email\">\r\n                    <Form.Label>Retype New Password</Form.Label>\r\n                    <Form.Control onChange={handleChangeRenewPassword} value={reNewPassword} className=\"input\" type='password' />\r\n                </Form.Group>\r\n                <div className=\"notice\">{noticeForm}</div>\r\n                <div className=\"submit\">\r\n                    <Button onClick={submitChangePassword} id=\"changePw\" variant=\"primary\" type=\"button\">\r\n                        Lưu</Button>\r\n                </div>\r\n            </Form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ChangePass;","import React, { useEffect } from 'react';\r\nimport Header from './components/Header/Header';\r\nimport Login from './components/LoginSignUp/Login'\r\nimport ManageListBoardCard from './components/ManageListBoardCard/ManageListBoardCard';\r\nimport Board from './components/Board/Board'\r\nimport SignUp from './components/LoginSignUp/SignUp'\r\nimport Profile from './components/Profile/Profile';\r\nimport ChangePass from './components/Profile/ChangePass';\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Route,\r\n} from \"react-router-dom\";\r\n\r\nconst App = () => {\r\n    const [isLogin,setIsLogin]=React.useState(false);\r\n    useEffect(()=>{\r\n      if(document.cookie.includes('access_token')) setIsLogin(true);\r\n    },[isLogin]);\r\n    const handleLogin=async (login)=>{\r\n      console.log(login);\r\n      if(login===false) {\r\n        await deleteAllCookies();\r\n        console.log(document.cookie);\r\n        setIsLogin(false);\r\n      }\r\n      else{\r\n        console.log(document.cookie);\r\n        setIsLogin(true);\r\n      }\r\n    }\r\n    return ( \r\n    <Router>\r\n      <div>\r\n      <Header isLogin={isLogin} handleLogin={handleLogin}/>\r\n        <Switch>\r\n          <Route path=\"/signup\">\r\n            <SignUp />\r\n          </Route>\r\n          <Route path=\"/logout\">\r\n            <Login isLogin={isLogin} type='logout' handleLogin={handleLogin}/>\r\n          </Route>\r\n          <Route path=\"/login\">\r\n            <Login isLogin={isLogin} handleLogin={handleLogin}/>\r\n          </Route>\r\n          <Route path=\"/signup\">\r\n            <SignUp />\r\n          </Route>\r\n          <Route path=\"/boarddetail/:id\" component = {Board}/>\r\n          <Route path=\"/profile\">\r\n            <Profile />\r\n          </Route>\r\n          <Route path=\"/changepassword\">\r\n            <ChangePass />\r\n          </Route>\r\n          <Route path=\"/\">\r\n            <ManageListBoardCard isLogin={isLogin}/>\r\n          </Route>  \r\n        </Switch>\r\n      </div>\r\n    </Router>         \r\n    )\r\n}\r\n\r\nconst deleteAllCookies=()=> {\r\n  return new Promise((resolve,reject)=>{\r\n    var cookies = document.cookie.split(\";\");\r\n    for (var i = 0; i < cookies.length; i++) {\r\n        var cookie = cookies[i];\r\n        var eqPos = cookie.indexOf(\"=\");\r\n        var name = eqPos > -1 ? cookie.substr(0, eqPos) : cookie;\r\n        document.cookie = name + \"=;expires=Thu, 01 Jan 1970 00:00:00 GMT\";\r\n    }\r\n    resolve(true);\r\n  }) \r\n}\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\n\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\n"],"sourceRoot":""}